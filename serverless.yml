service: websocket-chat

custom:
  projectEnvName: "${env:PROJECT_NAME}-${env:ENV_STAGE}"
  confFile:
    dev: serverless.config.yml

provider:
  name: aws
  runtime: nodejs12.x
  versionFunctions: false
  stage: ${opt:stage, 'local'}
  region: "${env:AWS_DEFAULT_REGION}"
  stackName: ${file(${self:custom.confFile.${self:provider.stage}}):stackName}
  iamRoleStatements: ${file(${self:custom.confFile.${self:provider.stage}}):iam}
  environment: ${file(${self:custom.confFile.${self:provider.stage}}):environment}
  apiGateway:
    websocketApiId: ${file(${self:custom.confFile.${self:provider.stage}}):websocketApiId}

  #provider:
#  name: aws
#  runtime: nodejs12.x
#  stackName: ${self:service}-${self:provider.stage}
#  stage: ${opt:stage, 'dev'}
#  region: ${opt:region, 'us-east-1'}
#  iamRoleStatements:
#    - Effect: Allow
#      Action:
#        - "execute-api:ManageConnections"
#      Resource:
#        - "arn:aws:execute-api:*:*:**/@connections/*"
#    - Effect: Allow
#      Action:
#        - "dynamodb:PutItem"
#        - "dynamodb:GetItem"
#        - "dynamodb:UpdateItem"
#        - "dynamodb:DeleteItem"
#        - "dynamodb:BatchGetItem"
#        - "dynamodb:BatchWriteItem"
#        - "dynamodb:Query"
#      Resource:
#         - Fn::GetAtt: [ApplicationDynamoDBTable, Arn]
#         - Fn::Join:
#            - '/'
#            - - Fn::GetAtt: [ApplicationDynamoDBTable, Arn]
#              - '*'

functions:
  connect:
    handler: src/handlers.connect
    timeout: 30
    memorySize: 256
    environment: ${file(${self:custom.confFile.${self:provider.stage}}):WebSocketsHandler.environment}
    vpc: ${file(${self:custom.cpmfFile.${self:provider.stage}}):vpc}
    events:
      - websocket:
          route: $connect

  disconnect:
    handler: src/handlers.disconnect
    timeout: 30
    memorySize: 256
    environment: ${file(${self:custom.confFile.${self:provider.stage}}):WebSocketsHandler.environment}
    vpc: ${file(${self:custom.cpmfFile.${self:provider.stage}}):vpc}
    events:
      - websocket:
          route: $disconnect

  sendMessage:
    handler: src/handlers.sendMessage
    timeout: 30
    memorySize: 256
    environment: ${file(${self:custom.confFile.${self:provider.stage}}):WebSocketsHandler.environment}
    vpc: ${file(${self:custom.cpmfFile.${self:provider.stage}}):vpc}
    events:
       - websocket:
           route: sendMessage

  subscribeChannel:
    handler: src/handlers.subscribeChannel
    timeout: 30
    memorySize: 256
    environment: ${file(${self:custom.confFile.${self:provider.stage}}):WebSocketsHandler.environment}
    vpc: ${file(${self:custom.cpmfFile.${self:provider.stage}}):vpc}
    events:
       - websocket:
           route: subscribeChannel 

  unsubscribeChannel:
    handler: src/handlers.unsubscribeChannel
    timeout: 30
    memorySize: 256
    environment: ${file(${self:custom.confFile.${self:provider.stage}}):WebSocketsHandler.environment}
    vpc: ${file(${self:custom.cpmfFile.${self:provider.stage}}):vpc}
    events:
      - websocket:
          route: unsubscribeChannel

package:
  exclude:
    - .git/**
    - node_modules/**
    - aws/**

resources: 
  Resources:
    ApplicationDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: reverse
            KeySchema:
              - AttributeName: sk
                KeyType: HASH
              - AttributeName: pk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
                
    
    
